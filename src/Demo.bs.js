// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var List = require("rescript/lib/js/list.js");
var $$Array = require("rescript/lib/js/array.js");
var Curry = require("rescript/lib/js/curry.js");
var Js_math = require("rescript/lib/js/js_math.js");
var Express = require("express");
var Belt_List = require("rescript/lib/js/belt_List.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Seedrandom = require("seedrandom");
var ConfigJson = require("./config.json");
var Belt_HashMapString = require("rescript/lib/js/belt_HashMapString.js");
var GetDayOfYear = require("date-fns/getDayOfYear");

var config = ConfigJson;

var app = Express();

function get(server, route, handler) {
  return server.get(route, (function (req, res) {
                return res.json(Curry._1(handler, req));
              }));
}

Seedrandom(config.Seed, {
      global: true
    });

var all_candidates = config.Candidates;

function shuffle(l) {
  return Belt_List.sort(l, (function (param, param$1) {
                return Js_math.random_int(-1, 2);
              }));
}

function build_year(candidates) {
  var year = /* [] */0;
  while(List.length(year) < 365) {
    year = Belt_List.concat(year, shuffle(candidates));
  };
  return year;
}

var s = Belt_HashMapString.make(all_candidates.length);

var main = build_year($$Array.to_list(all_candidates));

Belt_HashMapString.set(s, "main", main);

$$Array.iter((function (c) {
        var without = Belt_Array.keep(all_candidates, (function (x) {
                return c !== x;
              }));
        Belt_HashMapString.set(s, c, build_year($$Array.to_list(without)));
        
      }), all_candidates);

var main_schedule = Belt_HashMapString.get(s, "main");

var day = List.nth;

function dayWithAlternative(n) {
  var c = main_schedule !== undefined ? List.nth(main_schedule, n) : "None";
  var s$1 = Belt_HashMapString.get(s, c);
  var alt = s$1 !== undefined ? List.nth(s$1, n) : "None";
  return [
          c,
          alt
        ];
}

get(app, "/schedule", (function (param) {
        if (main_schedule !== undefined) {
          return $$Array.of_list(main_schedule);
        } else {
          return [];
        }
      }));

get(app, "/day/:day", (function (req) {
        var dayParam = req.params.day;
        var match = dayWithAlternative(dayParam);
        return {
                Today: match[0],
                Alternative: match[1]
              };
      }));

get(app, "/today", (function (param) {
        var match = dayWithAlternative(GetDayOfYear(new Date()));
        return {
                Today: match[0],
                Alternative: match[1]
              };
      }));

get(app, "/liveness", (function (param) {
        return {
                Ok: "Ok"
              };
      }));

get(app, "/config", (function (param) {
        return config;
      }));

app.listen(8080);

var all_schedules = s;

exports.config = config;
exports.app = app;
exports.get = get;
exports.all_candidates = all_candidates;
exports.shuffle = shuffle;
exports.build_year = build_year;
exports.all_schedules = all_schedules;
exports.main_schedule = main_schedule;
exports.day = day;
exports.dayWithAlternative = dayWithAlternative;
/* config Not a pure module */
